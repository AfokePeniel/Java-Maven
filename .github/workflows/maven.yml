name: Java CI with Maven, Docker, and Kubernetes

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code from GitHub
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Build the JAR with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Build and push Docker image
      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-afoke:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/hello-afoke:latest

      # 6. Set up kubectl (Kubernetes CLI)
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      # 7. Configure Kubernetes (using KUBECONFIG from secrets)
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_FILE }}" > $HOME/.kube/config

      # 8. Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml


